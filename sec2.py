# -*- coding: utf-8 -*-
"""ml02-ex.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cMZ9oulu-jV9qsYIwOXm9WZDgZlQNt-s
"""

import itertools
import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import cross_validate, KFold

df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/data/ML data/FuelConsumption.csv')
df.head(1)

cols = ['FUELCONSUMPTION_HWY', 'FUELCONSUMPTION_COMB','FUELCONSUMPTION_COMB_MPG']
combinations = []
for i in range(1, len(cols)+1):
    combinations.extend([list(x) for x in itertools.combinations(cols,i)])

combinations

y = df['CO2EMISSIONS'].values
reg = LinearRegression()
scoring = {
    'MSE': 'neg_mean_squared_error',
    'RMSE': 'neg_root_mean_squared_error',
    'MAE': 'neg_mean_absolute_error'
}
cv = KFold(n_splits=5, shuffle=True)
evaluation = []
for col in combinations:
  X = df[col].values
  cross_validation = cross_validate(reg, X, y, cv=cv, scoring=scoring, return_train_score=True)
  score = []
  for scores in cross_validation:
    if 'MSE' in scores:
      score.append(np.round(np.sqrt(np.abs(cross_validation[scores])).mean(),3))
    else:
      score.append(np.round(np.abs(cross_validation[scores]).mean(),3))
  score = np.array(score)
  score_percentage =np.round(score[2:]/np.mean(y),3)*100
  evaluation.append((','.join(col),*score,*score_percentage))
  keys =list(cross_validation.keys())
evaluation_df = pd.DataFrame(evaluation,columns=['cols']+ keys +[f"%{k}" for k in keys[2:]])
evaluation_df = evaluation_df.sort_values(by=evaluation_df.columns[3])
evaluation_df.reset_index(drop=True, inplace=True)
evaluation_df